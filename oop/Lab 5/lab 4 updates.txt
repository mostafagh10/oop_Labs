#include <iostream>
using namespace std;
class Complex{
   int real;
   int imagine;

   public:
       void setComplex(int real2,int imagine2){
            real = real2;
            imagine = imagine2;
       }
       int getReal(){
           return real;
       }
       int getImagine(){
           return imagine;
       }
       //print member function
       void print(){
           if(imagine > 0){
            cout<<real<<" +"<<imagine<<"i \n";
           }else if(imagine == 0){
               cout<<real<<"\n";
           }else{
           cout<<real<<imagine<<"i \n";
           }
       }

       int operator [] (int x){
           if(x == 1){
            return imagine;
           }else if(x==0){
               return real;
           }else{
               return 0;
           }
       }

       int operator [] (char * x){
           if(x == "img"){
            return imagine;
           }else if(x=="real"){
               return real;
           }else{
               return 0;
           }
       }

       friend istream & operator >> (istream &in,  Complex &c);


};
istream & operator >> (istream &in,  Complex &c)
{
    cout << "Enter Real Part ";
    in >> c.real;
    cout << "Enter Imaginary Part ";
    in >> c.imagine;
    return in;
}
ostream & operator << (ostream &out, Complex &c);
int main()
{
    Complex c1,c2,c3;
    c1.setComplex(50,15);
    c2.setComplex(30,15);
    cout<<c1[1]<<endl;
    cout<<c1["real"]<<endl;
    cout << "The second object is ";
    cout << c2;
    cin>>c3;
    cout << "The third object is ";
    cout<<c3;




    return 0;
}

ostream & operator << (ostream &out,Complex &c)
{
     if(c.getImagine() > 0){
        out<<c.getReal()<<" +"<<c.getImagine()<<"i \n";
      }else if(c.getImagine() == 0){
        out<<c.getReal()<<"\n";
      }else{
        out<<c.getReal()<<c.getImagine()<<"i \n";
      }
    return out;
}

